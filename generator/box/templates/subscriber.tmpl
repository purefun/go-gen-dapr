{{range .Handlers}}
func _{{.HandlerName}}_Handler(subscriber {{$.ServiceType}}) dapr.TopicHandlerFunc {
	return func(ctx context.Context, e *common.TopicEvent) (retry bool, err error) {
		var event {{.EventName}}
		err = json.Unmarshal(e.Data.([]byte), &event)
		if err != nil {
			return false, err
		}
		return subscriber.{{.HandlerName}}(ctx, event)
	}
}
{{end}}

func RegisterSubscriber(s common.Service, subscriber {{.ServiceType}}, pubsubName string) {
    {{- range .Handlers}}
	s.AddTopicEventHandler(
		&common.Subscription{
			PubsubName: pubsubName,
			Topic:      "{{trimPackageName .EventName}}",
		},
		errorHandlers.SubscriberErrorHandler(_{{.HandlerName}}_Handler(subscriber)),
	)
    {{- end}}
}
